//@wjw_note: 打包: gradlew clean build -x test
plugins {
  id 'eclipse'
  id 'java-library'
  id 'maven-publish'
}

group = "com.github.wjw465150"
version = "4.4.0"

description = """Vert.x Redis Cluster Manager"""

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

ext {
  vertx = [version : "4.4.0"]
  redisson = [version : "3.20.1"]
  logback = [version : "1.2.3"]
  fastjson2 = [version : "2.0.24"]  
  caffeine = [version : "3.1.5"]
  junitJupiter = [version : "5.7.0"]
  junit = [version : "4.13.1"]
}

repositories {
  //mavenLocal()
  maven { url "https://maven.aliyun.com/nexus/content/groups/public/" }  //优先使用阿里的镜像
  mavenCentral()
  maven {
    url = uri('https://oss.sonatype.org/content/repositories/snapshots')
  }
  maven {
    url = uri('https://repo.maven.apache.org/maven2/')
  }
}

configurations {
  provided
  optional 
}

dependencies {
  implementation platform("io.vertx:vertx-stack-depchain:${vertx.version}")  //Vert.x Stack Depchain,集中了Vert.x的依赖版本管理,这样后面在导入Vert.x模块时就不必再填写版本号了!

  api "io.vertx:vertx-core"
  optional "io.vertx:vertx-web"
  api("org.redisson:redisson:${redisson.version}") {
    exclude group: 'io.netty'
    exclude group: 'org.slf4j'
  }
  api 'org.slf4j:slf4j-api:1.7.32'
    
  provided "io.vertx:vertx-codegen"
  provided "io.vertx:vertx-docgen"
  
  testImplementation 'org.slf4j:slf4j-api:1.7.32'
  testImplementation 'ch.qos.logback:logback-core:1.2.10'
  testImplementation 'ch.qos.logback:logback-classic:1.2.10'

  testImplementation platform("io.vertx:vertx-stack-depchain:${vertx.version}")  //Vert.x Stack Depchain,集中了Vert.x的依赖版本管理,这样后面在导入Vert.x模块时就不必再填写版本号了!
  testImplementation("io.vertx:vertx-core") {
    artifact {
      classifier = 'tests'
    }
  }
  testImplementation("io.vertx:vertx-web") {
    artifact {
      classifier = 'tests'
    }
  }
  testImplementation("io.vertx:vertx-service-discovery") {
    artifact {
      classifier = 'tests'
    }
  }

  testImplementation "io.vertx:vertx-service-discovery"
  testImplementation "io.vertx:vertx-service-proxy"
  testImplementation "junit:junit:${junit.version}"
  testImplementation "com.jayway.awaitility:awaitility:1.7.0"
}

java {
  withSourcesJar()
  withJavadocJar()
}

publishing {
  publications {
    maven(MavenPublication) {
      from components.java
    }
  }
}

test {
  useJUnitPlatform()
}
